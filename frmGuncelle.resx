<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEAIAAkEAAAFgAAACgAAAAgAAAAPgAAAAEAIAAAAAAAgA8AACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmHMMAb2fdACQawg0kGsIwIxnCWCMZ
        wnYjGcKFIxnCgyMZwnAjGsJOJBrCJSQawgcjGcIAKiDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkGsIAJRvCASQawiUjGcJ0IxnCvSMZ
        wuYjGcL4IxnC/iMZwv8jGcL/IxnC/SMZwvUjGcLeIxnCrCMZwl0kGsIWIBXBACUbwwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmHMMAIxnCACQawhgjGcJ+IxnC3yMZ
        wv4jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC+yMZwssjGcJeJBrCCiQa
        wgArIsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBrCAEpAxwAjGcI8IxnCxCMZ
        wv0jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wvgjGcKiIxrCICMZwgAmHMMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQawgAuJMMAIxnCUSMZ
        wuEjGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcLDIxnCLCMZwgAlG8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAlG8IAIhjCACMZ
        wkojGcLlIxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcLGIxnCJSMZwgAnHcMAAAAAAAAAAAAAAAAAKB7DACMZ
        wgAjGcIsIxnC1iMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcKtJBrCDyQawgAAAAAAAAAAAAAA
        AAAkGsIAJBrCCiMZwqcjGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwvwjGcJyHxXCACQb
        wgAAAAAAJhzDACMZwgAjGcJTIxnC9iMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IRfB/yIYwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wtwjGsImIxnCAAAAAAAkGsIAJBrCCiMZwrUjGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8+Ncn/NCvH/yIYwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwn4hF8IAJRvCACMZwgAjGcI5IxnC7yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/KB7D/7i16/+Khd//IBbB/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnCzCQawhQkGsIAIhjCACMZwngjGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8qIMT/ycfw/5iT4v8gFsH/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL0IxnCQSMZwgAlG8IFIxnCrCMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yogxP/Jx/D/mJPi/yAWwf8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcJyIxnCACQawhQjGcLMIxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8hF8H/IBbB/yAWwf8gFsH/Jx7D/8jG8P+WkuL/HRPA/yAW
        wf8gFsH/IBbB/yIYwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yIYwv8iGML/IxnC/yMZwpgbEcAAJBrCICMZ
        wtwjGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/zszyf9PR87/TkbO/05Gzv9UTND/1NLz/6yo
        6P9MRM3/TkbO/05Gzv9NRc7/MijG/yIYwv8jGcL/IxnC/yMZwv8iGML/MinG/zgvyP8jGcL/IxnCriUb
        wgQkGsIjIxnC3iMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8mHMP/pqLn/+vq+v/o5/n/6Of5/+no
        +f/5+f7/9PT8/+jn+f/o5/n/6Of5/+jn+f96dNr/IBbB/yMZwv8jGcL/IxnC/yEXwf+OieD/rqro/yYc
        w/8jGcK1JRvCByQawiAjGcLcIxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv9DOsv/WlPR/1lS
        0f9ZUtH/XljS/9bV9P+xrun/V1DQ/1lS0f9ZUtH/WFHR/zYtx/8iGML/IxnC/yMZwv8jGcL/IhjC/6il
        5/+8uez/JhzD/yMZwq4lG8MEJBrCFSMZws4jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yEX
        wf8gFsH/IBbB/yAWwf8nHsP/yMbw/5aS4v8dE8D/IBbB/yAWwf8gFsH/IhjC/yMZwv8jGcL/IxnC/yMZ
        wv8nHcP/v7zt/6ai5v8iGML/IxnCmRYMvwAlG8IGIxnCryMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yogxP/Jx/D/mJPi/yAWwf8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IhjC/zgvyP/d2/b/f3nc/yAVwf8jGcJ0IxnCACIYwgAjGcJ8IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/KiDE/8nH8P+Yk+L/IBbB/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8gFcH/ZV7U/+jn+f9PR87/IBbB9SMZwkQjGcIAIxnCACMZwj4jGcLxIxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8oH8P/vbrt/46I4P8gFsH/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/ycdw/+yr+r/wb7u/yshxP8iGMLQJBrCFiQawgAkGsIAJBrCDCMZ
        wrsjGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv9FPcv/OTDI/yIY
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8gFsH/X1fT/+rp+f9tZtb/IBbB/yMZwoMgFsIAJRvCACYc
        wwAjGcIAIxnCWiMZwvgjGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yEX
        wf8iGML/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IRfB/zkwyP/MyvH/uLXr/ywixP8iGMLfIxnCKiMZ
        wgAAAAAAAAAAACQawgAkGsINIxnCryMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yEXwf8xKMb/sq7q/9zb9f9JQc3/IRfB/SMZ
        wnkMAMAAJBrCAAAAAAAAAAAAJx3DACMZwgAjGcIzIxnC3SMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yIYwv8gFcH/PTXJ/7ay6//l4/j/X1jT/yEX
        wf8jGcK1JBrCEyQawgAAAAAAAAAAAAAAAAAAAAAAJBvCACAWwgAjGcJUIxnC6yMZwv8jGcL/IxnC/yMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8iGML/IhjC/yAWwf8fFcH/LSPF/21n1//W1PT/2dj1/1xV
        0v8hF8L/IxnCziMZwisjGcIAJh3DAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBrCACYcwgEjGcJcIxnC6CMZ
        wv8jGcL/IxnC/yMZwv8jGcL/IxnC/yMZwv8jGcL/JhzD/y0jxf82Lcf/TkbO/4F73P/IxfD/7Ov6/6yo
        6P9DOsv/IRbB/yMZwswjGcIzIhjCACUbwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBrCACcd
        wgEjGcJHIxnCziMZwv8jGcL/IxnC/yMZwv8jGcL/IxnC/yUbw/+Qi+D/0tDy/9za9f/p6Pn/4N/2/6yo
        6P9bVNL/Jx3D/yEXwfojGcKtIxnCJyIYwgAlG8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJRvCACIYwgAkGsIgIxnCjCMZwucjGcL/IxnC/yMZwv8jGcL/JBrC/2pj1v+TjuH/f3rc/2BY
        0/88M8n/JBrC/yAWwf0jGcLVIxnCaiQawg4jGcIAKB7DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACQawgAlG8IDJBrCLyMZwoMjGcLJIxnC7iMZwvwjGcL/IRfB/yAW
        wf8fFcH/IBXB+SEXwuYjGcK5IxnCaiQawh0oH8MAJRvCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlG8MAJhzDASQawhMkGsI9IxnCaCMZ
        wogjGcKSIxnCkSMZwoEjGcJdJBrCMCQawgsgFsEAJh3DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/gB///AAH//gAAf/wAAD/4AAAf8AAAD+AAAAfAAAAHwAAAA4AAAAOAAAABgAAAAQAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAGAAAABgAAAAYAAAAPAAAADwAAAB+AAAAfwAAAP8AAAH/gA
        AD/+AAB//wAB///AB/8=
</value>
  </data>
</root>